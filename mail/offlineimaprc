[general]
# General information.  See the fully annotated example more information
# https://github.com/jgoerzen/offlineimap/blob/master/offlineimap.conf

metadata = ~/.offlineimap
accounts = ohm, gmail
maxsyncaccounts = 2
socktimeout = 60
ui = Basic
fsync = false

# This helper file lets you use gnome-keyring to store usernames / passwords
pythonfile = ~/.dotfiles/mail/bin/offlineimap-helper.py

[mbnames]
# Create a list of available mailboxes for mutt
enabled = yes
filename = ~/.dotfiles/mail/mutt/muttmailboxes
header = "mailboxes "

# Exclude these mailboxes from the above mailbox list
#folderfilter = lambda accountname, foldername: not re.search('(^bak.*|.*drafts$|.*spam$|.*sent$|.*trash$)', foldername)

peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"

[Account ohm]
localrepository = local-ohm
remoterepository = remote-ohm
status_backend = sqlite

[Account gmail]
localrepository = local-gmail
remoterepository = remote-gmail
status_backend = sqlite

[Repository local-ohm]
type = Maildir
localfolders = ~/.mail/ohm

# Translate names from local names to remote names:
# This one does:
# 1. Capitalizes all the folder names
# 2. Changes any underscores to spaces
# 3. Corrects Sent Items
# 4. Changes Inbox to INBOX
# 5. And INBOX/archive to INBOX/Archive
nametrans = lambda foldername: re.sub ('archive', 'Archive',
                               re.sub ('Inbox', 'INBOX',
                               re.sub ('Sent items', 'Sent Items',
                               re.sub ('_', ' ', foldername.capitalize()))))
#re.sub ('Archive', 'INBOX.Archive',

[Repository remote-ohm]
type = IMAP
maxconnections = 3
remotehost = my.ohmportal.de
remoteusereval = get_username("my.ohmportal.de")
remotepasseval = get_password("my.ohmportal.de")
# If using ssl, you will need to specify certificates to use with them
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
realdelete = yes
folderfilter = lambda foldername: foldername not in ['Documents','Junk E-mail']

# Translate remote names to local names:
# This one does:
# 1. Transforms names to lowercase
# 2. Replaces spaces with underscores
nametrans = lambda foldername: re.sub (' ', '_', foldername.lower())
#re.sub ('inbox.Archive', 'archive',


[Repository local-gmail]
type = Maildir
localfolders = ~/.mail/gmail
# Note the nametrans below in remote-gmail: it undoes this one
nametrans = lambda folder: {'inbox':   'INBOX',
                            'drafts':  '[Google Mail]/Drafts',
                            'sent':    '[Google Mail]/Sent Mail',
                            'flagged': '[Google Mail]/Starred',
                            'trash':   '[Google Mail]/Trash',
                            'archive': '[Google Mail]/All Mail',
                            }.get(folder, folder)

[Repository remote-gmail]
type = Gmail
maxconnections = 3
remotehost = imap.gmail.com
remoteusereval = get_username("imap.gmail.com")
remotepasseval = get_password("imap.gmail.com")
# If using ssl, you will need to specify certificates to use with them
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
realdelete = yes
# Note the nametrans above in local-gmail: it undoes this one
nametrans = lambda folder: {'INBOX':                   'inbox',
                            '[Google Mail]/Drafts':    'drafts',
                            '[Google Mail]/Sent Mail': 'sent',
                            '[Google Mail]/Starred':   'flagged',
                            '[Google Mail]/Trash':     'trash',
                            '[Google Mail]/All Mail':  'archive',
                            }.get(folder, folder)

# Don't sync spam and trash
folderfilter = lambda foldername: foldername not in ['[Google Mail]/Spam','[Google Mail]/Trash']
