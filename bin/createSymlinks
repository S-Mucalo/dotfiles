#!/bin/bash

#requires ipython, mpd, systemd, mpc

# Create .config directory if needed
if [ ! -d ~/.config ]
  then mkdir ~/.config
fi
if [ ! -d ~/.emacs.d ]
  then mkdir ~/.emacs.d
fi
if [ ! -d ~/.backup ]
  then mkdir ~/.backup
fi
if [ ! -d ~/.ipython ]
  then ipython profile create
fi


declare -a links=(.bashrc \
                      .emacs.d/init.el .emacs.d/custom.el \
                      .gitconfig \
                      .config/qutebrowser
                      .config/ranger \
                      .config/polybar \
                      .config/i3 \
                      .config/dunst \
                      .config/rofi \
                      .config/mpd \
                      .config/tmux \
                      .config/gsimplecal \
                      .ncmpcpp \
                      .Xresources \
                      .offlineimaprc .msmtprc \
                      .ipython/profile_default/ipython_config.py \
                      .ipython/profile_default/ipython_kernel_config.py \
                      .ssh \
                      .vimrc \
                      .zshrc)

# If files already exist create backups
# for filename in ${links[*]}
# do
#     if [[ ! -f $filename && ! -d $filename ]]; then
#         if [[ ! -e ~/.backup/$filename ]]; then

#             mv ~/$filename ~/.backup/$filename
#         else
#             j=0
#             while [[ -e $filename-$j ]] ; do
#                 let j++
#             done
#             newname=$filename-$j
#             mv ~/$filename ~/.backup/$newname
#         fi
#     fi
# done


declare -a configs=(dunst tmux wal rofi udiskie gsimplecal qutebrowser ranger polybar i3 mpd ncmpcpp)
for filename in ${configs[*]}
do
    if [[ -L $HOME/.config/$filename ]]; then
        echo $HOME/.config/$filename
        rm -r $HOME/.config/$filename
    fi
    ln -s $HOME/.dotfiles/$filename $HOME/.config/$filename
done


# bash
ln -s $HOME/.dotfiles/bash/bashrc $HOME/.bashrc

# Emacs
ln -s $HOME/.dotfiles/emacs/init.el $HOME/.emacs.d/init.el
ln -s $HOME/.dotfiles/emacs/custom.el $HOME/.emacs.d/custom.el


# nano
ln -s $HOME/.dotfiles/nano/nanorc $HOME/.nanorc

# git
ln -s $HOME/.dotfiles/git/gitconfig $HOME/.gitconfig


# ipython
ln -s $HOME/.dotfiles/ipython/ipython_config.py \
   $HOME/.ipython/profile_default/ipython_config.py
ln -s $HOME/.dotfiles/ipython/ipython_kernel_config.py \
   $HOME/.ipython/profile_default/ipython_kernel_config.py


declare -a mpd_files=(database log pid sticker.sql)
for filename in ${mpd_files[*]}
do
    if [[ ! -f $HOME/.config/mpd/$filename ]]; then
        touch $HOME/.config/mpd/$filename
    fi
done
systemctl --user enable mpd.service
mpc update

# X
ln -s $HOME/.dotfiles/X/xinitrc $HOME/.xinitrc

# Mail
ln -s $HOME/.dotfiles/mail/offlineimaprc $HOME/.offlineimaprc
ln -s $HOME/.dotfiles/mail/msmtprc $HOME/.msmtprc

# ssh
ln -s $HOME/.dotfiles/ssh/config $HOME/.ssh

# tmux
ln -s $HOME/.dotfiles/tmux/tmux.conf $HOME/.tmux.conf

# vim
ln -s $HOME/.dotfiles/vim/vimrc $HOME/.vimrc

# zsh
ln -s $HOME/.dotfiles/zsh/zshrc $HOME/.zshrc
